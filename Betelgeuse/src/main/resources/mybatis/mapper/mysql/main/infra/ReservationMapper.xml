<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bicycledoctors.module.reservation.ReservationDao">
	
	<resultMap type="com.bicycledoctors.module.reservation.ReservationDto" id="resultMapObj"></resultMap>
	
	<sql id="selectCommon">	    
	    from
			reservation r
			left join shop as s on r.shop_shopSeq = s.shopSeq
			left join bicycle as b on r.bicycle_bikeSeq = b.bikeSeq
			left join usercustomer as u on b.userCustomer_seq = u.seq
		where 1=1
        <if test="shDelNy != null and !shDelNy.equals('')">AND rsrvDelNy = #{shDelNy}</if>
				<choose>
					<when test="shOptionDate == 1">AND rsrvInstDate BETWEEN #{shDateStart} AND #{shDateEnd}</when>
					<when test="shOptionDate == 2">AND rsrvUpdtDate BETWEEN #{shDateStart} AND #{shDateEnd}</when>
					<when test="shOptionDate == 3">AND reservationDate BETWEEN #{shDateStart} AND #{shDateEnd}</when>
				</choose>
        <choose>
            <when test="shOption == 1">AND rsrvSeq = #{shValue}</when>
            <when test="shOption == 2">AND s.shopName LIKE CONCAT('%',#{shValue},'%')</when>
            <when test="shOption == 3">AND u.userName LIKE CONCAT('%',#{shValue},'%')</when>
            <when test="shOption == 4">AND u.userId LIKE CONCAT('%',#{shValue},'%')</when>
            <when test="shOption == 5">AND b.bicycleName LIKE CONCAT('%',#{shValue},'%')</when>
        </choose>
    </sql>
	
	<insert id="insert">
	INSERT INTO reservation (
		reservationDate
		,reservationTime
		,shop_shopSeq
		,bicycle_bikeSeq
		,rsrvDesc
	) VALUES (
		#{reservationDate}
		,#{reservationTime}
		,#{shopSeq}
		,#{bikeSeq}
		,#{rsrvDesc}
	)
	<selectKey resultType="String" keyProperty="rsrvSeq" order="AFTER">
			SELECT last_insert_id()
	</selectKey>
	</insert>

	<insert id="rsrvServicesInst">
	INSERT INTO reservServices (
			reservServicesCd
			,shop_shopSeq
			,reservation_rsrvSeq
		) VALUES 
		<foreach collection="listAS" item="dto" separator=",">
	        (#{dto.reservServicesCd}
			,#{dto.shopSeq}
			,#{dto.rsrvSeq})
	    </foreach>
	</insert>
	
	<select id="selectOneCount" resultType="Integer">
    	select count(*)
    	<include refid = "selectCommon"></include>
   	</select>
	<select id="selectList" resultMap="resultMapObj">
	select aa.* from (
		SELECT 
		    r.rsrvSeq
		    ,r.shop_shopSeq
		    ,r.bicycle_bikeSeq
		    ,r.reservationDate
		    ,r.reservationTime
		    ,r.rsrvDesc
		    ,r.reservedNy
		    ,shopName
		    ,shopTel
			,b.bikeSeq
		    ,b.bicycleName
		    ,b.bicycleCateCd
		    ,b.bicycleBrandCd
		    ,b.bicycleModel
		    ,b.bicycleYears
		    ,b.bicycleMiles
		    ,b.bicycleSN
		    ,b.drivetrainBrandCd
		    ,b.drivetrainModel
		    ,b.brakeBrandCd
		    ,b.isElectDrivetrain
		    ,b.isDiskBrakes
		    ,b.isHydrauric
		    ,b.isInternal
		    ,b.wheelBrandCd
		    ,b.wheelModel
		    ,b.bicycleDescribe
		    ,b.bikeStatus
		    ,b.latestiNrDate
		    ,b.bikeDelNy
		    ,b.instDate
		    ,b.updtDate
		    ,b.userCustomer_seq
		    ,u.userName
		    ,u.userId
		    ,u.userTel
		    ,u.userShopSeq
 		<include refid = "selectCommon"></include>
 		order by rsrvSeq desc
		) aa
	limit #{rowNumToShow} offset #{startRnumForMysql}
	</select>
	<select id="selectOne" resultMap="resultMapObj">
		SELECT 
		    r.rsrvSeq
		    ,r.shop_shopSeq
		    ,r.bicycle_bikeSeq
		    ,r.reservationDate
		    ,r.reservationTime
		    ,r.rsrvDesc
		    ,r.rsrvDelNy
		    ,r.reservedNy
			,b.bikeSeq
		    ,b.bicycleName
		    ,b.bicycleCateCd
		    ,b.bicycleBrandCd
		    ,b.bicycleModel
		    ,b.bicycleYears
		    ,b.bicycleMiles
		    ,b.bicycleSN
		    ,b.drivetrainBrandCd
		    ,b.drivetrainModel
		    ,b.brakeBrandCd
		    ,b.isElectDrivetrain
		    ,b.isDiskBrakes
		    ,b.isHydrauric
		    ,b.isInternal
		    ,b.wheelBrandCd
		    ,b.wheelModel
		    ,b.bicycleDescribe
		    ,b.bikeStatus
		    ,b.latestiNrDate
		    ,b.bikeDelNy
		    ,b.instDate
		    ,b.updtDate
		    ,b.userCustomer_seq
		    ,u.userName
		    ,u.userId
		    ,u.userTel
		    ,u.userShopSeq
		    ,shopName
 		from
			reservation r
			left join shop as s on r.shop_shopSeq = s.shopSeq
			left join bicycle as b on r.bicycle_bikeSeq = b.bikeSeq
			left join usercustomer as u on b.userCustomer_seq = u.seq
		where 1=1
			and r.rsrvSeq = #{rsrvSeq}
	</select>
	<select id="selectOne4View" resultMap="resultMapObj">
		SELECT 
		    r.rsrvSeq
		    ,r.shop_shopSeq
		    ,r.bicycle_bikeSeq
		    ,r.reservationDate
		    ,r.reservationTime
		    ,r.rsrvDesc
		    ,r.reservedNy
			,b.bikeSeq
		    ,b.bicycleName
		    ,b.bicycleCateCd
		    ,b.bicycleBrandCd
		    ,b.bicycleModel
		    ,b.bicycleYears
		    ,b.bicycleMiles
		    ,b.bicycleSN
		    ,b.drivetrainBrandCd
		    ,b.drivetrainModel
		    ,b.brakeBrandCd
		    ,b.isElectDrivetrain
		    ,b.isDiskBrakes
		    ,b.isHydrauric
		    ,b.isInternal
		    ,b.wheelBrandCd
		    ,b.wheelModel
		    ,b.bicycleDescribe
		    ,b.bikeStatus
		    ,b.latestiNrDate
		    ,b.bikeDelNy
		    ,b.instDate
		    ,b.updtDate
		    ,b.userCustomer_seq
		    ,u.userName
		    ,u.userTel
		    ,u.userShopSeq
 		from
			reservation r
			left join bicycle as b on r.bicycle_bikeSeq = b.bikeSeq
			left join usercustomer as u on b.userCustomer_seq = u.seq
		where 1=1
			and r.rsrvSeq = #{rsrvSeq}
	</select>
	<select id="selectList4ServiceView" resultMap="resultMapObj">
		SELECT 
		    reservServicesCd
 		from
			reservServices
		where 1=1
			and reservation_rsrvSeq = #{rsrvSeq}
	</select>
	
	<select id="selectList4ReservationCheck" resultMap="resultMapObj">
		SELECT 
			b.bikeSeq,
		    b.bicycleName,
		    b.bicycleCateCd,
		    b.bicycleBrandCd,
		    b.bicycleModel,
		    b.bicycleYears,
		    b.bicycleMiles,
		    b.bicycleSN,
		    b.drivetrainBrandCd,
		    b.drivetrainModel,
		    b.brakeBrandCd,
		    b.isElectDrivetrain,
		    b.isDiskBrakes,
		    b.isHydrauric,
		    b.isInternal,
		    b.wheelBrandCd,
		    b.wheelModel,
		    b.bicycleDescribe,
		    b.bikeStatus,
		    b.latestiNrDate,
		    b.bikeDelNy,
		    b.instDate,
		    b.updtDate,
		    b.userCustomer_seq,
		    r.rsrvSeq,
		    (select userShopSeq from usercustomer where seq=#{userShopSeq}) as userShopSeq
		    ,u.userName
 		from
			bicycle as b
			left join reservation r on b.bikeSeq = r.bicycle_bikeSeq
			left join usercustomer u on u.seq = b.userCustomer_seq
		where 1=1
			and r.shop_shopSeq = #{userShopSeq}
			and b.bikeStatus = 121
			and r.rsrvDelNy = 0
	</select>
	<select id="selectList4iNr" resultMap="resultMapObj">
		SELECT 
			b.bikeSeq,
		    b.bicycleName,
		    b.bicycleCateCd,
		    b.bicycleBrandCd,
		    b.bicycleModel,
		    b.bicycleYears,
		    b.bicycleMiles,
		    b.bicycleSN,
		    b.drivetrainBrandCd,
		    b.drivetrainModel,
		    b.brakeBrandCd,
		    b.isElectDrivetrain,
		    b.isDiskBrakes,
		    b.isHydrauric,
		    b.isInternal,
		    b.wheelBrandCd,
		    b.wheelModel,
		    b.bicycleDescribe,
		    b.bikeStatus,
		    b.latestiNrDate,
		    b.bikeDelNy,
		    b.instDate,
		    b.updtDate,
		    b.userCustomer_seq,
		    r.rsrvSeq,
		    (select userShopSeq from usercustomer where seq=#{userShopSeq}) as userShopSeq
		    ,(select irSeq from inspectRepair where reservation_rsrvSeq=rsrvSeq) as irSeq
		    ,u.userName
 		from
			bicycle as b
			left join reservation r on b.bikeSeq = r.bicycle_bikeSeq
			left join usercustomer u on u.seq = b.userCustomer_seq
		where 1=1
			and r.shop_shopSeq = #{userShopSeq}
			and b.bikeStatus between 122 and 123
			and r.rsrvDelNy = 0
<!-- 			and a.bikeStatus &gt;= 120 -->
<!-- 			and a.bikeStatus &lt;= 121 -->
	</select>
	<select id="selectList4iNrCompl" resultMap="resultMapObj">
		SELECT 
			b.bikeSeq,
		    b.bicycleName,
		    b.bicycleCateCd,
		    b.bicycleBrandCd,
		    b.bicycleModel,
		    b.bicycleYears,
		    b.bicycleMiles,
		    b.bicycleSN,
		    b.drivetrainBrandCd,
		    b.drivetrainModel,
		    b.brakeBrandCd,
		    b.isElectDrivetrain,
		    b.isDiskBrakes,
		    b.isHydrauric,
		    b.isInternal,
		    b.wheelBrandCd,
		    b.wheelModel,
		    b.bicycleDescribe,
		    b.bikeStatus,
		    b.latestiNrDate,
		    b.bikeDelNy,
		    b.instDate,
		    b.updtDate,
		    b.userCustomer_seq,
		    r.rsrvSeq,
		    (select userShopSeq from usercustomer where seq=#{userShopSeq}) as userShopSeq
		    ,(select irSeq from inspectRepair where reservation_rsrvSeq=rsrvSeq) as irSeq
		    ,u.userName
 		from
			bicycle as b
			left join reservation r on b.bikeSeq = r.bicycle_bikeSeq
			left join inspectRepair i on r.rsrvSeq = i.reservation_rsrvSeq
			left join usercustomer u on u.seq = b.userCustomer_seq
		where 1=1
			and r.shop_shopSeq = #{userShopSeq}
			and i.irIsCompleteNy = 1
	</select>
	<select  id="selectOne4InR" resultMap="resultMapObj">
		SELECT
			i.irSeq
		FROM
			inspectRepair as i
			LEFT JOIN reservation as r ON i.reservation_rsrvSeq = r.rsrvSeq
            WHERE 1=1
            AND r.rsrvSeq = #{rsrvSeq}
	</select>
	
	<update id="bikeStatusUpdt">
		update bicycle set
			bikeStatus = 121
		    ,updtDate = CURRENT_TIMESTAMP
		where
			bikeSeq = #{bikeSeq}
	</update>
	<update id="rsrvUpdt">
		update reservation set
			reservationDate = #{reservationDate}
		    ,reservationTime = #{reservationTime}
		where
			rsrvSeq = #{rsrvSeq}
	</update>
	<update id="rsrvYesUpdt">
		update bicycle set
			bikeStatus = 122
		    ,updtDate = DATE_FORMAT(CONVERT_TZ(NOW(), 'UTC', 'Asia/Seoul'), '%Y-%m-%d %H:%i:%S')
		where
			bikeSeq = #{bikeSeq}
	</update>
	<update id="rsrvNoUpdt">
		update bicycle set
			bikeStatus = 120
		    ,updtDate = DATE_FORMAT(CONVERT_TZ(NOW(), 'UTC', 'Asia/Seoul'), '%Y-%m-%d %H:%i:%S')
		where
			bikeSeq = #{bikeSeq}
	</update>
	<select id="selectOneCountRsrvList" resultType="Integer">
    	SELECT count(*)
    	FROM bicycle as b
			left join reservation r on b.bikeSeq = r.bicycle_bikeSeq
		where 1=1
			and r.shop_shopSeq = (select userShopSeq from usercustomer where seq = #{seq})
			and b.bikeStatus = 121
			and r.rsrvDelNy = 0
			
    </select>
	<select id="selectOneCountInRList" resultType="Integer">
    	SELECT count(*)
    	FROM bicycle as b
			left join reservation r on b.bikeSeq = r.bicycle_bikeSeq
		where 1=1
			and r.shop_shopSeq = (select userShopSeq from usercustomer where seq = #{seq})
			and b.bikeStatus between 122 and 123
			and r.rsrvDelNy = 0
    </select>
	<select id="selectOneCountInRComplList" resultType="Integer">
    	SELECT count(*)
    	from
			bicycle as b
			left join reservation r on b.bikeSeq = r.bicycle_bikeSeq
			left join inspectRepair i on r.rsrvSeq = i.reservation_rsrvSeq
			left join usercustomer u on u.seq = b.userCustomer_seq
		where 1=1
			and r.shop_shopSeq = (select userShopSeq from usercustomer where seq = #{seq})
			and i.irIsCompleteNy = 1
    </select>
</mapper>